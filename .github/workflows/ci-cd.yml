name: CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

permissions:
  pull-requests: read
  contents: read

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
        test-type: ['login', 'cadastro', 'exclusao', 'editar', 'pagamento', 'pedidos']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-mock coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run ${{ matrix.test-type }} unit tests
      run: |
        python -m pytest -m "unitarios_${{ matrix.test-type }}" -v --cov=. --cov-append --cov-report=xml

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-${{ matrix.test-type }}
        path: coverage.xml

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    if: always()

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-mock coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run integration tests
      run: |
        python -m pytest -m integracao -v --cov=. --cov-append --cov-report=xml

    - name: Upload integration coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage-integration
        path: coverage.xml

  combine-coverage:
    name: Combine Coverage Reports
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    if: always()

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage

    - name: Download all coverage reports
      uses: actions/download-artifact@v4
      with:
        path: coverage-reports

    - name: Combine coverage reports
      run: |
        python -m coverage combine coverage-reports/coverage-*/coverage.xml
        python -m coverage xml -o combined-coverage.xml

    - name: Upload combined coverage
      uses: actions/upload-artifact@v4
      with:
        name: combined-coverage
        path: combined-coverage.xml

  sonarqube-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: combine-coverage
    if: success() && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download combined coverage
      uses: actions/download-artifact@v4
      with:
        name: combined-coverage

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        args: >
          -Dsonar.projectKey=loja-microsservicos
          -Dsonar.projectName=Loja em Microsservi√ßos
          -Dsonar.python.version=3.12
          -Dsonar.python.coverage.reportPaths=combined-coverage.xml
          -Dsonar.sources=.
          -Dsonar.exclusions=**/test_*,**/venv/**,**/.github/**,**/__pycache__/**,**/.git/**
          -Dsonar.tests=.
          -Dsonar.test.inclusions=**/test_*.py
          -Dsonar.sourceEncoding=UTF-8
          -Dsonar.junit.reportPaths=test-results.xml
          -Dsonar.python.xunit.reportPath=test-results.xml

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    if: always()

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest

    - name: Run all tests for summary
      run: |
        python -m pytest --junitxml=test-results.xml -v

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: test-results.xml
